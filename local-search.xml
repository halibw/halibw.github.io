<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Build Android</title>
    <link href="/2021/06/02/Build-Android/"/>
    <url>/2021/06/02/Build-Android/</url>
    
    <content type="html"><![CDATA[<p>自己手头上有一台闲置的设备，小米max2 代号是oxygen。系统预装的是android 7.1.2,屏幕大小拿来监控挺合适的，7.1的系统现在显然有些apk是装不上的。既然这样，为何不自己编译呢？<br/>好了，正文开始</p><span id="more"></span><p>有一台高性能的服务器，或者自己的pc，要求<br/></p><li>RAM至少8GB起步</li><li>CPU内核不少于4核，编译最主要也就是核心数，决定编译时间</li><li>250GB以上的SSD最好</li><br/>建议购买服务器，不然编译加同步源码(国内特色网络)起码一天。<br/>我编译系统选的是ubuntu 20.04,安装编译时必须的组件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsunicoderegexp">sudo apt install bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5 libncurses5-dev libsdl1.2-dev libssl-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev openjdk-11-jdk git vim jq python<br></code></pre></td></tr></table></figure><p>安装谷歌repo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsunicoderegexp">mkdir -p ~/bin<br>curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo<br>chmod a+x ~/bin/repo<br></code></pre></td></tr></table></figure><p>root模式时，设置变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsunicoderegexp">cat &gt;&gt; ~/.bashrc &lt;&lt;EOF<br><br># set PATH so it includes user&#x27;s private bin if it exists<br>if [ -d &quot;\$HOME/bin&quot; ] ; then<br>    PATH=&quot;\$HOME/bin:\$PATH&quot;<br>fi<br>EOF<br><br>source ~/.bashrc<br></code></pre></td></tr></table></figure><p>创建编译文件夹，这里我编译arrowos</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsunicoderegexp">mkdir arrow<br>cd arrow<br>repo init -u https://github.com/ArrowOS/android_manifest.git -b arrow-11.0  // 这里是ArrowOS，记得选分支<br></code></pre></td></tr></table></figure><p>repo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs jsunicoderegexp">repo sync // 服务器环境直接使用该命令即可，自己电脑你可能需要加force参数<br></code></pre></td></tr></table></figure><p>同步Device Tree/Kernel/vendor,小米max2的vendor还有common，也要同步。比如我的<a href="https://github.com/halibw/android_xiaomi_oxygen_device">https://github.com/halibw/android_xiaomi_oxygen_device</a><br/>然后按需修改</br>AndroidProducts.mk<br/>Device.mk等device文件</br>开始build</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsunicoderegexp">. build/envsetup.sh<br>lunch oxygen_arrow-userdebug // oxygen是我max2的代号,首次编译建议选eng<br></code></pre></td></tr></table></figure><p>好了，剩下的就是修改编译过程中出现的问题了,服务器编译记得安装终端复用器如tmux、screen</br><br>参考资料<a href="https://hackmd.io/@EdwardWu/CompileAndroidCustomROM">https://hackmd.io/@EdwardWu/CompileAndroidCustomROM</a> </br></p>]]></content>
    
    
    
    <tags>
      
      <tag>Android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记录校园网自动登录</title>
    <link href="/2021/05/18/One-blogs/"/>
    <url>/2021/05/18/One-blogs/</url>
    
    <content type="html"><![CDATA[<p>第一次写个人博客，记录下校园网的折腾。为了减少不必要重复学习的时间成本，把内容放在博客，方便下次直接采用。<br>学校采用的是深信服的认证，这网上已经有很多方法教程了，这里不展开详细说明。<br>首先，使用chrome获取认证链接，放到OpenWrt bash脚本里，实现开机自启</p><span id="more"></span><figure class="highlight bash"><figcaption><span>Hello World!</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh /etc/rc.common</span></span><br><span class="line">START=99</span><br><span class="line"><span class="function"><span class="title">start</span></span>() </span><br><span class="line">&#123;</span><br><span class="line">sleep 10</span><br><span class="line"></span><br><span class="line">IP_LIST=<span class="string">&quot;www.baidu.com&quot;</span> // <span class="built_in">test</span> network connect</span><br><span class="line"><span class="keyword">for</span> IP <span class="keyword">in</span> <span class="variable">$IP_LIST</span>; <span class="keyword">do</span></span><br><span class="line">    NUM=1</span><br><span class="line">    <span class="keyword">while</span> [ <span class="variable">$NUM</span> -le 3 ]; <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> ping -c 1 <span class="variable">$IP</span> &gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$IP</span> Ping is successful.&quot;</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        //在次输入chrome获取到的认证</span><br><span class="line">        //wget-----------</span><br><span class="line">rm -f /login.php //清除日志</span><br><span class="line">            FAIL_COUNT[<span class="variable">$NUM</span>]=<span class="variable">$IP</span></span><br><span class="line">            <span class="built_in">let</span> NUM++</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$&#123;#FAIL_COUNT[*]&#125;</span> -eq 3 ];<span class="keyword">then</span></span><br><span class="line">//wget --------------</span><br><span class="line">rm -f /login.php</span><br><span class="line">        <span class="built_in">unset</span> FAIL_COUNT[*]</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存的时候，记得注意在windows系统下的CRLF LF格式<br>在linux环境编写时可忽略<br>最后链接到rc.d，使用chmod -R 777 修改权限<br><br/><br>完成</p>]]></content>
    
    
    <categories>
      
      <category>curl apply</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OpenWrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
